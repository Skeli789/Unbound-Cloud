name: Build and Release Destop App

# TODO: Set a publisher during packaging

# Trigger this workflow when pushing a tag (e.g. v1.0.0)
# on:
#   push:
#     tags:
#       - 'v*'

# Always when pushing to electron branch
on:
  push:
    branches:
    - electron

jobs:
  # --- Linux Build Job ---
  build-linux:
    name: Build Linux packages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/build_and_release_setup_env

      - name: Install dependencies and build
        run: |
            yarn install
            yarn build
        env:
          CI: false # Ignore build warnings

      - name: Package Linux apps
        run: |
          yarn package-linux32
          yarn package-linux64
          yarn package-linuxarmv7l
          yarn package-linuxarm64
        # yarn package-linuxmips64el

      - name: Upload linux32 artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux32
          path: dist/UnboundCloud-linux-ia32

      - name: Upload linux64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux64
          path: dist/UnboundCloud-linux-x64

      - name: Upload linuxarmv7l artifact
        uses: actions/upload-artifact@v4
        with:
          name: linuxarmv7l
          path: dist/UnboundCloud-linux-armv7l

      - name: Upload linuxarm64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: linuxarm64
          path: dist/UnboundCloud-linux-arm64

      # - name: Upload linuxmips64el artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: 
      #     path: dist/UnboundCloud-linux-mips64el

  # --- Windows Build Job ---
  build-windows:
    name: Build Windows packages
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/build_and_release_setup_env

      - name: Install dependencies and build
        shell: bash
        run: |
            rm -f yarn.lock
            yarn config delete proxy
            yarn config delete https-proxy
            yarn config delete registry
            yarn install --network-timeout 1000000 # Set network timeout to 10 minutes
            yarn build
        env:
          CI: false # Ignore build warnings

      - name: Package Windows apps
        shell: bash
        run: |
          npm config set script-shell bash
          yarn package-win32
          yarn package-win64
          yarn package-winarm64

      - name: Upload win32 artifact
        uses: actions/upload-artifact@v4
        with:
          name: win32
          path: dist/UnboundCloud-win32-ia32

      - name: Upload win64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: win64
          path: dist/UnboundCloud-win32-x64

      - name: Upload winarm64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: winarm64
          path: dist/UnboundCloud-win32-arm64
  
  # --- macOS Build Job ---
  build-mac:
    name: Build Mac packages
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/build_and_release_setup_env

      - name: Install dependencies and build
        run: |
            yarn install
            yarn build
        env:
          CI: false # Ignore build warnings

      - name: Package Mac apps
        run: |
          yarn package-mac64
          yarn package-macarm64
        # yarn package-macuniversal

      - name: Upload mac64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: mac64
          path: dist/UnboundCloud-darwin-x64

      - name: Upload macarm64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: macarm64
          path: dist/UnboundCloud-darwin-arm64

      # - name: Upload macuniversal artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: macuniversal
      #     path: dist/UnboundCloud-darwin-universal

  # --- Release Job ---
  release:
    name: Create GitHub Release and Attach Artifacts
    needs: [build-linux, build-windows, build-mac]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        include:
          # For Linux
          - artifact: "linux3"
          - artifact: "linux64"
          - artifact: "linuxarmv7l"
          - artifact: "linuxarm64"
          # - artifact: "linuxmips64el"

          # For Windows
          - artifact: "win32"
          - artifact: "win64"
          - artifact: "winarm64"

          # For macOS
          - artifact: "mac64"
          - artifact: "macarm64"
          # - artifact: "macuniversal"

    steps:
      - uses: actions/checkout@v4

      # Download the artifact
      - name: Download ${{ matrix.artifact }} artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: .

      # Create a release using the tag name
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref }}

      # Release each artifact
      - name: Upload ${{ matrix.artifact }} release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ matrix.artifact }}.zip
          asset_name: $${{ matrix.artifact }}.zip
          asset_content_type: $application/zip