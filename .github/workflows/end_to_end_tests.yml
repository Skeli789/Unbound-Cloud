name: End-to-End Tests

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Use Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: "22.x"

    - name: Install JS dependencies
      run: |
        set -e
        yarn install
        cd server && yarn install

    - name: Install Python dependencies
      run: |
        set -e
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r test-requirements.txt

    - name: Install Chrome
      run: |
        set -e
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable

    - name: Start Website & Server
      run: |
        set -e
        nohup yarn start &
        cd server && nohup yarn start &
        sleep 10  # Wait for the site to start
      env:
        APPDATA: ${{ vars.APPDATA }}
        UNBOUND_EMAIL: ${{ vars.UNBOUND_EMAIL }}
        UNBOUND_EMAIL_PASSWORD: ${{ secrets.UNBOUND_EMAIL_PASSWORD }}
        WONDER_TRADE_WEBHOOK: ${{ secrets.WONDER_TRADE_WEBHOOK }}
        ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}

    - name: Run Selenium tests
      run: |
        yarn test-selenium
      env:
        APPDATA: ${{ vars.APPDATA }}

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()  # Run this step even if previous steps fail
      with:
        name: selenium-test-results
        path: selenium-report.html
