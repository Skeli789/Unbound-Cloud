name: Release Pipeline

# Run when pushing to main or manually triggered
on:
  push:
    branches:
      - main
      - pipeline-revamp # TEMP
  workflow_dispatch:

env:
  TEST_BRANCH: heroku

jobs:
  # Run front-end tests
  run_frontend_tests:
    # Always pass until frontend tests are implemented
    name: Run Front-End Tests
    # uses: ./.github/workflows/frontend_tests.yml
    # TEMP from here down for the rest of this job, remove when frontend tests are implemented
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

  # Run back-end tests
  run_backend_tests:
    name: Run Back-End Tests
    uses: ./.github/workflows/backend_tests.yml
    with:
      APPDATA: ${{ vars.APPDATA }}
      UNBOUND_EMAIL: ${{ vars.UNBOUND_EMAIL }}
    secrets:
      UNBOUND_EMAIL_PASSWORD: ${{ secrets.UNBOUND_EMAIL_PASSWORD }}
      WONDER_TRADE_WEBHOOK: ${{ secrets.WONDER_TRADE_WEBHOOK }}
      ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
      CHECKSUM_KEY: ${{ secrets.CHECKSUM_KEY }}

  # Run end-to-end tests
  run_e2e_tests:
    name: Run End-to-End Tests
    uses: ./.github/workflows/end_to_end_tests.yml
    with:
      APPDATA: ${{ vars.APPDATA }}
      UNBOUND_EMAIL: ${{ vars.UNBOUND_EMAIL }}
    secrets:
      UNBOUND_EMAIL_PASSWORD: ${{ secrets.UNBOUND_EMAIL_PASSWORD }}
      WONDER_TRADE_WEBHOOK: ${{ secrets.WONDER_TRADE_WEBHOOK }}
      ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
      CHECKSUM_KEY: ${{ secrets.CHECKSUM_KEY }}

  # Update the test site branch
  update_test_branch:
    name: Update Test Site Branch
    needs: [run_backend_tests, run_e2e_tests]  # run_frontend_tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

  # Rebase the release branches
  rebase_release_branches:
    name: Rebase ${{ matrix.branch }} Branch
    runs-on: ubuntu-latest
    strategy:
      matrix:
        branch: [multiark, electron]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Rebase ${{ matrix.branch }} onto main
        run: |
          git fetch origin
          git checkout ${{ matrix.branch }}
          git rebase origin/main
  
  # Update release branches
  push_release_branches:
    name: Push ${{ matrix.branch }} Branch
    needs: rebase_release_branches
    runs-on: ubuntu-latest
    strategy:
      matrix:
        branch: [multiark, electron]
    environment:
      name: release-approval # Require manual approval for this job
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Push updated branch
        run: |
          git checkout ${{ matrix.branch }}
          git push origin ${{ matrix.branch }}
